@model Scholarships_Web.Models.AddScholarship.Model
@{
    ViewData["Title"] = "Add Scholarship";
}
<div style="display: flex; justify-content: space-between; margin-right:30px;">
    <a asp-controller="Home" asp-action="Index"><button type="button" class="btn btn-danger">Go Back</button></a>
    <h1>Add Scholarship</h1>
</div>
<form class="row g-3 needs-validation" method="post" novalidate>
    <div class="mb-3">
        <label for="name" class="form-label">Scholarship Name</label>
        <input type="text" class="form-control" id="name" name="name" required>
    </div>
    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <textarea class="form-control" id="description" rows="3" name="description" required></textarea>
    </div>
    <div class="mb-3">
        <label for="requirements" class="form-label">Requirements</label>
        <textarea class="form-control" id="requirements" rows="3" name="requirements" required></textarea>
    </div>
    <div class="mb-3">
        <label for="scholarshipType" class="form-label">Scholarship Type</label>
        <select id="scholarshipType" class="form-select" name="scholarshipType">
            @foreach (var type in @Model.GetScholarshipTypes())
            {
                <option value="@type.Id">@type.Name</option>
            }
        </select>
    </div>
    <div class="mb-3">
        <label for="degree" class="form-label">Degree</label>
        <select id="degree" class="form-select" name="degree">
            @foreach (var degree in @Model.GetDegrees())
            {
                <option value="@degree.Id">@degree.Name</option>
            }
        </select>
    </div>
    <div class="mb-3">
        <label for="financialCoverage" class="form-label">Financial Coverage</label>
        <input type="text" class="form-control" id="financialCoverage" name="financialCoverage" required>
    </div>
    <div class="col-12">
        <button class="btn btn-primary" type="submit">Add</button>
    </div>
</form>

<script>
(() => {
  'use strict'

  // Fetch all the forms we want to apply custom Bootstrap validation styles to
  const forms = document.querySelectorAll('.needs-validation')

  // Loop over them and prevent submission
  Array.from(forms).forEach(form => {
    form.addEventListener('submit', event => {
      if (!form.checkValidity()) {
        event.preventDefault()
        event.stopPropagation()
      }

      form.classList.add('was-validated')
    }, false)
  })
})()
</script>

